% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-YrsAnnual.R
\name{yrs_result}
\alias{yrs_result}
\alias{yrs_result_observe}
\alias{yrs_result_retain}
\alias{yrs_result_renew}
\alias{yrs_result_max}
\alias{yrs_result_avg}
\title{Results of license buying}
\usage{
yrs_result_observe(history_split, predict_age = 30)

yrs_result_retain(history_split, predict_age = 30, end_age = 64,
  model = function(x) yrs_fit_retain(x))

yrs_result_renew(history_split, history_predict = NULL,
  predict_age = 30, end_age = 64)

yrs_result_max(history_split, predict_age = 30, end_age = 64)

yrs_result_avg(history, predict_age = 30, end_age = 64)
}
\arguments{
\item{history_split}{license history list produced by yrs_zero_split()}

\item{predict_age}{target age for prediction (year zero)}

\item{end_age}{last age for prediction}

\item{model}{function for modelling}

\item{history_predict}{prediction dataset. If NULL, uses the training dataset}

\item{history}{training dataset}
}
\description{
These are convenience functions to wrap calculating, fitting, and predicting.
}
\section{Functions}{
\itemize{
\item \code{yrs_result_observe}: Results for predicting license buying - observed retention

\item \code{yrs_result_retain}: Results for predicting license buying - predicted retention

\item \code{yrs_result_renew}: Results for predicting license buying - predicted renewal

\item \code{yrs_result_max}: Results for predicting license buying - maximum retention

Based on observed retention, assume the retention rate remains level after the
last observed year. This defines a maximum estimate because retention curves
never begin sloping upward.

\item \code{yrs_result_avg}: Results for predicting license buying - predicted avg years

Different than the renew & retain functions since it uses all available ages
to estimate average years purchased in five, so no train_ages
arguments are needed.
}}

\examples{
library(dplyr)
data(hunt)
avg <- yrs_result_avg(hunt)

hunt_split <- hunt \%>\%
    yrs_avidity(drop_na_yrs = FALSE) \%>\%
    yrs_zero_split() \%>\%
    yrs_zero_filter(function(x) filter(x, age_year \%in\% 25:35))

observe <- yrs_result_observe(hunt_split)
retain <- yrs_result_retain(hunt_split)
renew <- yrs_result_renew(hunt_split)
max <- yrs_result_max(hunt_split)

library(ggplot2)
ggplot(observe, aes(age_year, pct, color = method)) + geom_point() +
    geom_line(data = retain) +
    geom_line(data = renew) +
    geom_line(data = avg) +
    geom_line(data = max)
}
\seealso{
Other functions to estimate annual license buying: \code{\link{yrs_avidity}},
  \code{\link{yrs_calc_avg}}, \code{\link{yrs_calc}},
  \code{\link{yrs_fit}}, \code{\link{yrs_lifetime}},
  \code{\link{yrs_plot}}, \code{\link{yrs_predict_avg}},
  \code{\link{yrs_predict}}, \code{\link{yrs_zero}}
}
\concept{functions to estimate annual license buying}
