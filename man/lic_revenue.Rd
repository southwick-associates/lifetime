% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/revenue.R
\name{lic_revenue}
\alias{lic_revenue}
\alias{lic_annual_stream}
\alias{lic_lifetime_stream}
\alias{lic_lifetime}
\title{Calculate future license revenue streams by current age}
\usage{
lic_annual_stream(retain_all, prices)

lic_lifetime_stream(prices, return_life, inflation, fund_years = 0:500)

lic_lifetime(prices, return_life, inflation, fund_years = NULL,
  perpetuity = TRUE)
}
\arguments{
\item{retain_all}{data frame of predicted years by age like that produced by
\code{\link{nc_retain_all}}}

\item{prices}{data frame of lifetime prices by age with at least
2 variables: current_age and price_lifetime}

\item{return_life}{percentage return from lifetime fund}

\item{inflation}{inflation rate for depreciation of lifetime fund}

\item{fund_years}{range of years to cast forward for stream-based lifetime
fund valuation}

\item{perpetuity}{if TRUE, use a perpetuity calculation
(\url{https://en.wikipedia.org/wiki/Perpetuity}) instead of
\code{\link{present_value}}}
}
\description{
Calculate future license revenue streams by current age
}
\section{Functions}{
\itemize{
\item \code{lic_annual_stream}: Stream of Revenue for annual scenario (Revenue|A)

\item \code{lic_lifetime_stream}: Stream of Revenue for lifetime scenario (Revenue|L)

\item \code{lic_lifetime}: Total Revenue for lifetime scenario (Revenue|L)
}}

\examples{
library(dplyr)
library(ggplot2)
data(retain_all)

# annual revenue simply follows retention curves (assuming constant pricing)
prices <- tibble(current_age = 16:63, price_annual = rep(40, 48))
lic_annual_stream(retain_all, prices)

# stream of lifetime revenue
prices <- mutate(prices, price_lifetime = rep(250, 48))
lic_lifetime_stream(prices, 0.05, 0.0219)

# total lifetime revenue (perpetuity vs. 50-year ROI)
lic_lifetime(prices, 0.05, 0.0219)
lic_lifetime(prices, 0.05, 0.0219, fund_years = 0:50, perpetuity = FALSE)
}
